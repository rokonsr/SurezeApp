@page "/Registration"
@using SurezeApp.Patients;
@inject IPatientDetailService PatientDetailService;
@inject NavigationManager NavigationManager
@using System.Net.Http.Json;
@inject HttpClient Http

<div class="row">
    <div class="col-md-2">
        <div class="card">
            <div class="card-body">
                @if (filesBase64.Count != 0)
                {
                    @foreach (var item in filesBase64)
                    {
                        <img src="data:@item.ContentType;base64,@item.Base64data" class="img-fluid" />
                    }
                }
                else if (Patient.ProfilePicture != "")
                {
                    <img src="/images/@Patient.ProfilePicture" />
                }
                else
                {
                    <img src="/images/avatar2.png" />
                }
            </div>
            <div class="card-footer text-center">
                <Label>@Patient.FirstName @Patient.LastName</Label><br />
                <Label>@Patient.MRN</Label>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <div class="card">
            <div class="card-body">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <Link Color="Color.Primary"
                              Type="@ButtonType.Submit"
                              PreventDefaultOnSubmit="true"
                              Clicked="SetPatientDetails">
                        Patient Details
                        </Link>
                    </li>
                    <li class="nav-item">
                        <Link Color="Color.Primary"
                              Type="@ButtonType.Submit"
                              PreventDefaultOnSubmit="true"
                              Clicked="SetContactDetails">
                        Contact Details
                        </Link>
                    </li>
                    <li class="nav-item">
                        <Link Color="Color.Primary"
                              Type="@ButtonType.Submit"
                              PreventDefaultOnSubmit="true"
                              Clicked="SetNewSpecimenOrder">
                        New Specimen Order
                        </Link>
                    </li>
                    <li class="nav-item">
                        <Link Color="Color.Primary"
                              Type="@ButtonType.Submit"
                              PreventDefaultOnSubmit="true"
                              Clicked="SetPreviousOrderList">
                        Previous Order List
                        </Link>
                    </li>
                </ul>
                <br/>
                @*Patient Details*@
                <div style="display:@PatientDetail">
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Primary Provider</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.PrimaryProvider">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var provider in providerList)
                                    {
                                        <SelectItem Value="@provider.Code">
                                            @provider.Name
                                        </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>MRN</FieldLabel>
                                <TextEdit @bind-Text="@Patient.MRN">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <Field>
                            <FieldLabel>IsActive Status</FieldLabel>
                            <Select @bind-SelectedValue="@Patient.ActiveStatus">
                                <SelectItem Value="0">
                                    Choose An Option
                                </SelectItem>
                                @*@foreach (var provider in providerList)
                                {
                                    <SelectItem Value="@provider.Code">
                                        @provider.Name
                                    </SelectItem>
                                }*@
                            </Select>
                        </Field>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Title</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.PatientTitle">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var title in patientTitleList)
                                    {
                                        <SelectItem Value="@title.Code">
                                            @title.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Suffix</FieldLabel>
                                <TextEdit @bind-Text="@Patient.Suffix">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>First Name</FieldLabel>
                                <TextEdit @bind-Text="@Patient.FirstName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Last Name</FieldLabel>
                                <TextEdit @bind-Text="@Patient.LastName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <Field>
                            <FieldLabel>National ID. Number</FieldLabel>
                            <TextEdit @bind-Text="@Patient.NationalIDNumber">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Alternate ID. Type</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.AlternateType">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var item in alternateTypes)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Alternate ID. Number</FieldLabel>
                                <TextEdit @bind-Text="@Patient.AlternateIDNumber">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Date Of Birth</FieldLabel>
                                <DateEdit TValue="DateTime" @bind-Date="@Patient.DateOfBirth" />
@*                                <TextEdit>
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>*@
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Sex</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Sex">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var item in providerList)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Race</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Race">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var race in patientRace)
                                    {
                                        <SelectItem Value="@race.Code">
                                            @race.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Language</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Language">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var item in languages)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Ethnicity</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Ethnicity">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var item in providerList)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Education Level</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.EducationLevel">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var item in educationLevels)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Nationality</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Nationality">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var item in nationalities)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Citizen</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Citizen">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var provider in providerList)
                                    {
                                        <SelectItem Value="@provider.Code">
                                            @provider.Name
                                        </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Religion</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.Religion">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var item in religions)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Marital Status</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.MaritalStatus">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @foreach (var item in maritalStatus)
                                    {
                                        <SelectItem Value="@item.Code">
                                            @item.Name
                                        </SelectItem>
                                    }
                                </Select>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Patient Category</FieldLabel>
                                <Select @bind-SelectedValue="@Patient.PatientCategory">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var provider in providerList)
                                    {
                                        <SelectItem Value="@provider.Code">
                                            @provider.Name
                                        </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Profile Picture</FieldLabel> <br/>
                                <InputFile class="form-control" OnChange="OnChange" accept="image/png, image/jpeg, image/gif" id="inputFile" />
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Button Color="Color.Light" Type="@ButtonType.Submit" PreventDefaultOnSubmit="true" Clicked="OpenPatientListPage">Back</Button>
                        </div>
                        <div class="col-6 text-end">
                            <Button Color="Color.Primary" Type="@ButtonType.Submit" PreventDefaultOnSubmit="true" Clicked="CreatePatientAsync">Save</Button>
                        </div>
                        
                    </div>
                </div>

                @*ContactDetails*@
                <div style="display:@ContactDetails">
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Contact Mode</FieldLabel>
                                <Select @bind-SelectedValue="@Contact.ContactMode">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var provider in providerList)
                                    {
                                    <SelectItem Value="@provider.Code">
                                    @provider.Name
                                    </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>&nbsp;</FieldLabel> <br/>
                                <InputCheckbox @bind-Value="@Contact.IsPrimary"></InputCheckbox> <Span>Make this contact primary</Span>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Address 1</FieldLabel>
                                <TextEdit @bind-Text="@Contact.Address1">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Address 2</FieldLabel>
                                <TextEdit @bind-Text="@Contact.Address2">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Address 3</FieldLabel>
                                <TextEdit @bind-Text="@Contact.Address3">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Country</FieldLabel>
                                <Select @bind-SelectedValue="@Contact.Country">
                                    <SelectItem Value="0">
                                        Choose An Option
                                    </SelectItem>
                                    @*@foreach (var provider in providerList)
                                    {
                                    <SelectItem Value="@provider.Code">
                                    @provider.Name
                                    </SelectItem>
                                    }*@
                                </Select>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Postal Code</FieldLabel>
                                <TextEdit @bind-Text="@Contact.PostalCode">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>City</FieldLabel>
                                <TextEdit @bind-Text="@Contact.City">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>State</FieldLabel>
                                <TextEdit @bind-Text="@Contact.State">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Email</FieldLabel>
                                <TextEdit @bind-Text="@Contact.Email">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Phone Number 1</FieldLabel>
                                <TextEdit @bind-Text="@Contact.PhoneNumber1">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                        <div class="col-6">
                            <Field>
                                <FieldLabel>Phone Number 2</FieldLabel>
                                <TextEdit @bind-Text="@Contact.PhoneNumber2">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </div>
                    </div>
                </div>

                @*New Specimen Order*@
                <div style="display:@NewSpecimenOrder">
                    NewSpecimenOrder
                </div>

                @*PreviousOrderList*@
                <div style="display:@PreviousOrderList">
                    PreviousOrderList
                </div>
            </div>

        </div>
    </div>
    
</div>

@code {

    public string PatientDetail { get; set; } = string.Empty;
    public string ContactDetails { get; set; } = string.Empty;
    public string NewSpecimenOrder { get; set; } = string.Empty;
    public string PreviousOrderList { get; set; } = string.Empty;


    private PatientDetailDto Patient { get; set; } = new PatientDetailDto();
    private ContactDetailDto Contact { get; set; } = new ContactDetailDto();

    IReadOnlyList<AlternateIDTypeDto> alternateTypes = Array.Empty<AlternateIDTypeDto>();
    IReadOnlyList<PatientTitleDto> patientTitleList = Array.Empty<PatientTitleDto>();
    IReadOnlyList<PatientRaceDto> patientRace = Array.Empty<PatientRaceDto>();
    IReadOnlyList<LanguageDto> languages = Array.Empty<LanguageDto>();
    IReadOnlyList<EducationLevelDto> educationLevels = Array.Empty<EducationLevelDto>();
    IReadOnlyList<NationalityDto> nationalities = Array.Empty<NationalityDto>();
    IReadOnlyList<ReligionDto> religions = Array.Empty<ReligionDto>();
    IReadOnlyList<MaritalStatusDto> maritalStatus = Array.Empty<MaritalStatusDto>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        PatientDetail = "block";
        ContactDetails = "none";
        NewSpecimenOrder = "none";
        PreviousOrderList = "none";

        alternateTypes = await PatientDetailService.GetAlternateIDTypeAsync();
        patientTitleList = await PatientDetailService.GetPatientTitleAsync();
        patientRace = await PatientDetailService.GetPatientRacesAsync();
        languages = await PatientDetailService.GetLanguagesAsync();
        educationLevels = await PatientDetailService.GetEducationLevelsAsync();
        nationalities = await PatientDetailService.GetNationalitiesAsync();
        religions = await PatientDetailService.GetReligionsAsync();
        maritalStatus = await PatientDetailService.GetMaritalStatusAsync();
    }

    private void SetPatientDetails()
    {
        PatientDetail = "block";
        ContactDetails = "none";
        NewSpecimenOrder = "none";
        PreviousOrderList = "none";
    }

    private void SetContactDetails()
    {
        if (Patient.Id.ToString() != "00000000-0000-0000-0000-000000000000")
        {
            PatientDetail = "none";
            ContactDetails = "block";
            NewSpecimenOrder = "none";
            PreviousOrderList = "none";
        }
    }

    private void SetNewSpecimenOrder()
    {
        if (Patient.Id.ToString() != "00000000-0000-0000-0000-000000000000")
        {
            PatientDetail = "none";
            ContactDetails = "none";
            NewSpecimenOrder = "block";
            PreviousOrderList = "none";
        }
    }

    private void SetPreviousOrderList()
    {
        if (Patient.Id.ToString() != "00000000-0000-0000-0000-000000000000")
        {
            PatientDetail = "none";
            ContactDetails = "none";
            NewSpecimenOrder = "none";
            PreviousOrderList = "block";
        }
    }

    private async void CreatePatientAsync()
    {
        var patient = await PatientDetailService.CreatePatientAsync(Patient);
        Patient = await PatientDetailService.GetPatientDetailAsync(patient.Id.ToString());
    }

    private void OpenPatientListPage()
    {
        NavigationManager.NavigateTo("/Patients");
    }

    // Image Upload 

    List<ImageFileDto> filesBase64 = new List<ImageFileDto>();
    string message = "InputFile";
    bool isDisabled = false;

    async Task OnChange(InputFileChangeEventArgs e)
    {
        filesBase64 = new List<ImageFileDto>();

        var files = e.GetMultipleFiles(); // get the files selected by the users
        foreach (var file in files)
        {
            var resizedFile = await file.RequestImageFileAsync(file.ContentType, 640, 480); // resize the image file
            var buf = new byte[resizedFile.Size]; // allocate a buffer to fill with the file's data

            using (var stream = resizedFile.OpenReadStream())
            {
                await stream.ReadAsync(buf); // copy the stream to the buffer
            }

            string fileName = Guid.NewGuid().ToString("N") + "-" + file.Name;

            filesBase64.Add(new ImageFileDto { Base64data = Convert.ToBase64String(buf), ContentType = file.ContentType, FileName = fileName }); // convert to a base64 string!!
        }
        message = "Click UPLOAD to continue";

        await Upload();
    }

    async Task Upload()
    {
        isDisabled = true;

        using (var msg = await Http.PostAsJsonAsync<List<ImageFileDto>>(NavigationManager.BaseUri + "api/upload", filesBase64, System.Threading.CancellationToken.None))
        {
            Patient.ProfilePicture = filesBase64.FirstOrDefault().FileName;

            isDisabled = false;
            if (msg.IsSuccessStatusCode)
            {
                message = $"{filesBase64.Count} files uploaded";
                filesBase64.Clear();
            }
        }
    }

}
